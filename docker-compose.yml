version: "3"
services:
  ## Sftp Compose Config
  sftp-server:
    container_name: sftp-server
    image: atmoz/sftp
    volumes:
      - ../image/upload:/home/foo/upload
    ports:
      - "2222:22"
    command: foo:pass:1001

  ## MySQL Docker Compose Config
  postgres-order:
    container_name: postgres-order
    image: postgres
    environment:
      POSTGRES_DB: OrderDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: westa852
      PGDATA: /data/postgres
    volumes:
      - ./postgres-order:/data/postgres
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: unless-stopped

  postgres-catalog:
    container_name: postgres-catalog
    image: postgres
    environment:
      POSTGRES_DB: ClothesDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: westa852
      PGDATA: /data/postgres
    volumes:
      - ./postgres-catalog:/data/postgres
    expose:
      - "5432"
    ports:
      - "5432:5432"
    command: -p 5432
    restart: unless-stopped

  ## Keycloak Config with Mysql database
  keycloak-postgres:
    container_name: keycloak-postgres
    image: postgres
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:20.0.1
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8888:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-postgres

  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  broker:
    container_name: broker
    image: 'confluentinc/cp-kafka:latest'
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Eureka Server
  eureka-dockerfile:
    image: 0lilhate/eureka-dockerfile:latest
    container_name: eureka-dockerfile
    pull_policy: always
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  apigateway-dockerfile:
    image: 0lilhate/apigateway-dockerfile:latest
    container_name: apigateway-dockerfile
    pull_policy: always
    ports:
      - "8181:8083"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka-dockerfile
      - keycloak

  ## Catalog-Service Docker Compose Config
  catalog-dockerfile:
    container_name: catalog-dockerfile
    image: 0lilhate/catalog-dockerfile:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-catalog:5432/ClothesDB
    depends_on:
      - postgres-catalog
      - eureka-dockerfile
      - apigateway-dockerfile

  ## Order-Service Docker Compose Config
  order-dockerfile:
    container_name: order-dockerfile
    image: 0lilhate/order-dockerfile:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5431/OrderDB
    depends_on:
      - postgres-order
      - apigateway-dockerfile
      - eureka-dockerfile

  ## Transaction-Service Docker Compose Config
  transaction-dockerfile:
    container_name: transaction-dockerfile
    image: 0lilhate/transaction-dockerfile:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - broker
      - eureka-dockerfile
      - apigateway-dockerfile

  ## Notification-Service Docker Compose Config
  notification-dockerfile:
    container_name: notification-dockerfile
    image: 0lilhate/notification-dockerfile:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka-dockerfile
      - apigateway-dockerfile
      - broker

  ## Image-Service Docker Compose Config
  image-dockerfile:
    container_name: image-dockerfile
    image: 0lilhate/image-dockerfile:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka-dockerfile
      - apigateway-dockerfile

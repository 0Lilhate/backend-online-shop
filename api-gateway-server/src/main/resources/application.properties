spring.application.name=api-gateway
server.port=8083

eureka.client.service-url.defaultZone=http://localhost:8081/eureka


# для корректной работы api-gateway (локатор обнаружения)
spring.cloud.gateway.discovery.locator.enabled=true
# позволяет не зависет от регистра букв
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.loadbalancer.ribbon.enabled=false



eureka.instance.instance-id=${spring.application.name}:${random.uuid}



#Прямая настройка
#spring.cloud.gateway.routes[0].id=catalog
#spring.cloud.gateway.routes[0].uri=lb://catalog
#spring.cloud.gateway.routes[0].predicates[0]=Path=/clothe



spring.security.oauth2.client.registration.keycloak-spring-gateway-client.provider=my-provider
spring.security.oauth2.client.registration.keycloak-spring-gateway-client.client-id=online-shop-microservice
spring.security.oauth2.client.registration.keycloak-spring-gateway-client.client-secret=CpLu2gFiVv5rEA08NuUnhw2wW0jt1o2D
spring.security.oauth2.client.registration.keycloak-spring-gateway-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak-spring-gateway-client.redirect-uri={baseUrl}/login/oauth2/code/gateway
spring.security.oauth2.client.registration.keycloak-spring-gateway-client.scope=openid, message.read


spring.security.oauth2.client.provider.my-provider.jwk-set-uri=http://localhost:8888/auth/realms/online-shop-microservice/protocol/openid-connect/certs
spring.security.oauth2.client.provider.my-provider.token-uri=http://localhost:8888/auth/realms/online-shop-microservice/protocol/openid-connect/token
spring.security.oauth2.client.provider.my-provider.authorization-uri=http://localhost:8888/auth/realms/online-shop-microservice/protocol/openid-connect/auth

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8888/auth/realms/online-shop-microservice/protocol/openid-connect/certs
